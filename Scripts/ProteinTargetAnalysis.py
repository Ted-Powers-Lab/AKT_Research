import pandas as pd
import sys
import os
import pathlib
import subprocess
import argparse
import glob
import csv



'''
Purpose of this program is the following:
First, to look through the "Comparison" data folder for csvs and to merge them into a temporary combined file
Second, using the dataframe generated by the above process, to take the individual target accession number and genome acc
Third, using the number(s), search through the proteomes in order to find the fasta sequence that matches the IDs
Fourth, extract the fasta sequence and store it temporarily in memory
Fifth, using the fasta sequence, run the interproscan program on the fasta file using pfam settings
Sixth, take the output of the interproscan and save it to a directory with species accession number tied to the result
Seventh, 







'''
#combining csv files in "Comparison"
def combine_csv(input_csv):

    dataframe = []

    for file in pathlib.Path(input_csv).rglob('*.csv'):
        df = pd.read_csv(file)
        dataframe.append(df)


    merged_csv = pd.concat(dataframe, axis = 0)

    return merged_csv








def runInterproScan (fastaFile, outputDirectory):
    # Purpose of this function is to run the interproscan program using an inputted fasta file
    # Must have an alias that points to the interproscan program for this to work
    # Alias must be interpro. We want the input, model to use, output format to give

    fastaFilename = fastaFile.stem

    output_filename = f'{fastaFilename}.tsv'
    output_filepath = os.path.join(outputDirectory, output_filename)



    command = ["interpro", f"-i {fastaFile}", "-"]

    with open(output_filepath, "w") as outfile:
        subprocess.run(command, stdout=outfile)







def main():
    parser = argparse.ArgumentParser()
    parser.add_argument("-i")
    arg = parser.parse_args()


    csv_directory = pathlib.Path(arg.i)

    merged_csv = combine_csv(csv_directory)
    merged_csv.to_csv('merged_csv.csv', index = False)


